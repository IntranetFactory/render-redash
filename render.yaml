databases:
  - name: redash postgres14
    region: frankfurt
    plan: Starter
    postgresMajorVersion: 14
    databaseName: redash
    user: redash

services:
  - name: redash
    type: web
    autoDeploy: false
    region: frankfurt
    plan: Starter
    env: docker
    dockerfilePath: ./redash/Dockerfile
    dockerCommand: render-redash server
    healthCheckPath: /ping
    domains:
      - redash.example.com
    envVars:
      - fromGroup: redash
      - key: REDASH_DATABASE_URL
        fromDatabase:
          name: redash postgres14
          property: connectionString
      - key: REDASH_REDIS_URL
        fromService:
          name: redash redis
          type: redis
          property: connectionString
      - key: PORT
        value: 5000
      - key: REDASH_WEB_WORKERS
        value: 1

  - name: redash scheduler
    type: worker
    autoDeploy: false
    region: frankfurt
    plan: Starter
    env: docker
    dockerfilePath: ./redash/Dockerfile
    dockerCommand: render-redash scheduler
    envVars:
      - fromGroup: redash
      - key: REDASH_DATABASE_URL
        fromDatabase:
          name: redash postgres14
          property: connectionString
      - key: REDASH_REDIS_URL
        fromService:
          name: redash redis
          type: redis
          property: connectionString
      - key: QUEUES
        value: "celery"
      - key: WORKERS_COUNT
        value: 1

  - name: redash worker scheduled
    type: worker
    autoDeploy: false
    region: frankfurt
    plan: Starter
    env: docker
    dockerfilePath: ./redash/Dockerfile
    dockerCommand: render-redash worker
    envVars:
      - fromGroup: redash
      - key: REDASH_DATABASE_URL
        fromDatabase:
          name: redash postgres14
          property: connectionString
      - key: REDASH_REDIS_URL
        fromService:
          name: redash redis
          type: redis
          property: connectionString
      - key: QUEUES
        value: "scheduled_queries,schemas"
      - key: WORKERS_COUNT
        value: 1

  - name: redash worker adhoc
    type: worker
    autoDeploy: false
    region: frankfurt
    plan: Starter
    env: docker
    dockerfilePath: ./redash/Dockerfile
    dockerCommand: render-redash worker
    envVars:
      - fromGroup: redash
      - key: REDASH_DATABASE_URL
        fromDatabase:
          name: redash postgres14
          property: connectionString
      - key: REDASH_REDIS_URL
        fromService:
          name: redash redis
          type: redis
          property: connectionString
      - key: QUEUES
        value: "queries,periodic,emails,default"
      - key: WORKERS_COUNT
        value: 1

  - name: redash redis
    type: redis
    region: frankfurt
    plan: Starter
    maxmemoryPolicy: noeviction

envVarGroups:
  - name: redash
    envVars:
      - key: REDASH_LOG_LEVEL
        value: "INFO"
      - key: REDASH_COOKIE_SECRET
        generateValue: true
      - key: REDASH_SECRET_KEY
        generateValue: true
      - key: REDASH_FEATURE_ALLOW_CUSTOM_JS_VISUALIZATIONS
        value: true
      - key: REDASH_MAIL_SERVER
        value: smtp.postmarkapp.com
      - key: REDASH_MAIL_PORT
        value: 587
      - key: REDASH_MAIL_USE_TLS
        value: true
      - key: REDASH_MAIL_USERNAME
        sync: false # It is the postmark server "tools" API token
      - key: REDASH_MAIL_PASSWORD
        sync: false # It is the postmark server "tools" API token
      - key: REDASH_MAIL_DEFAULT_SENDER
        value: redash@example.com